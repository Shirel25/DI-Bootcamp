- What is a class?
    A class is a template for creating objects (instances of that class). 
    It defines attributes (variables) and methods (functions)
    that describe the behavior and proerties of an object. 

- What is an instance?
    An instance is a specific object created from a class.
    The class serves as a blueprint and the instance is a real
    usable object with its own values for the attributes.

- What is encapsulation?
    Encapsulation is the concept of hiding the internal details of an object
    by making attributes private and providing getter and setter methods to 
    control access. 

- What is abstraction?
    Abstraction is the concept of hiding complex implementation details of an object. 
    It focuses on "what" an object should do, not "how" it does it.

- What is inheritance?
    Inheritance is the concept of allowing a child class to inherit attributes 
    and methods from a parent class. It can use and modify functionality from the parent 
    classe.

- What is multiple inheritance?
    Multiple inheritance is a feature in OOP where a class can inherit from more than one
    parent class. This allows a child to acquire attributes and methods from
    multiples resources. 

- What is polymorphism?
    Polymorphism allows objects of different classes to be treated as if they were the same
    type. It enables methods to have the same name but different behaviors
    depending on the object that calls them. 

- What is method resolution order or MRO?
    MRO determines how Python searches for methods in class hierarchies, 
    ensuring clarity and avoiding conflicts. 